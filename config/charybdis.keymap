#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp MINUS   &kp N1  &kp N2  &kp N3     &kp N4          &kp N5              &kp N6        &kp N7     &kp N8     &kp N9   &kp N0       &kp BSPC
&kp TAB     &kp Q   &kp W   &kp E      &kp R           &kp T               &kp Y         &kp U      &kp I      &kp O    &kp P        &kp BACKSLASH
&kp ESCAPE  &kp A   &kp S   &kp D      &kp F           &kp G               &kp H         &kp J      &kp K      &kp L    &kp SEMI     &kp APOS
&kp GRAVE   &kp Z   &kp X   &kp C      &kp V           &kp B               &kp N         &kp M      &kp COMMA  &kp DOT  &lt 0 SLASH  &kp DELETE
                            &mkp LCLK  &kp BACKSPACE   &kp DELETE          &kp ENTER     &kp SPACE
                                       &kp LEFT_SHIFT  &kp LEFT_CONTROL    &kp LEFT_ALT
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&none  &none    &none           &none         &none          &none    &none          &none       &none              &none          &none  &none
&none  &none    &kp HOME        &kp UP_ARROW  &kp END        &none    &none          &none       &none              &none          &none  &none
&none  &kp TAB  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT      &none    &kp RIGHT_GUI  &kp RSHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &none  &none
&none  &none    &kp PAGE_UP     &kp ESCAPE    &kp PAGE_DOWN  &none    &none          &none       &none              &none          &none  &none
                                &none         &none          &none    &kp MINUS      &kp UNDER
                                              &none          &none    &none
            >;
        };

        nav {
            bindings = <
&none    &none   &none   &none      &none      &none        &none      &none     &none      &none   &none    &none
&kp F12  &kp F1  &kp F2  &kp F3     &kp F4     &kp F5       &kp F6     &kp F7    &kp F8     &kp F9  &kp F10  &kp F11
&none    &kp N1  &kp N2  &kp N3     &kp N4     &kp N5       &kp N6     &kp N7    &kp N8     &kp N9  &kp N0   &none
&none    &none   &none   &kp MINUS  &kp PLUS   &kp EQUAL    &kp EQUAL  &kp PLUS  &kp MINUS  &none   &none    &none
                         &kp LALT   &kp LSHFT  &kp LCTRL    &none      &none
                                    &none      &none        &none
            >;
        };

        functions {
            bindings = <
&none  &none    &none    &none   &none                  &none                &none            &none                 &none         &none         &none  &bt BT_CLR
&none  &kp F1   &kp F2   &kp F3  &kp F4                 &kp F5               &none            &none                 &bt BT_SEL 0  &bt BT_SEL 3  &none  &none
&none  &kp F6   &kp F7   &kp F8  &kp F9                 &kp F10              &none            &none                 &bt BT_SEL 1  &bt BT_SEL 4  &none  &none
&none  &kp F11  &kp F12  &none   &none                  &bootloader          &none            &none                 &bt BT_SEL 2  &none         &none  &bootloader
                         &none   &kp LC(C_AC_ZOOM_OUT)  &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &kp RC(C_AC_ZOOM_IN)
                                 &none                  &none                &none
            >;
        };

        symbols {
            bindings = <
&none  &none  &none             &none                 &none                 &none        &none          &none                  &none                  &none              &none        &none
&none  &none  &kp CAPS          &kp PLUS              &kp SQT               &kp CARET    &kp ASTRK      &kp DOUBLE_QUOTES      &kp AT                 &kp RMETA          &kp PERCENT  &none
&none  &none  &kp LEFT_BRACKET  &kp LS(LEFT_BRACKET)  &kp LEFT_PARENTHESIS  &kp PIPE     &kp SLASH      &kp RIGHT_PARENTHESIS  &kp LS(RIGHT_BRACKET)  &kp RIGHT_BRACKET  &kp COLON    &none
&none  &none  &kp AMPERSAND     &kp GRAVE             &kp EXCLAMATION       &kp PLUS     &kp BACKSLASH  &kp QUESTION           &kp TILDE              &kp DOLLAR         &kp HASH     &none
                                &none                 &none                 &none        &none          &none
                                                      &none                 &none        &none
            >;
        };

        mouse {
            bindings = <
&none  &none  &none  &none     &none     &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none     &none     &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none     &none     &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none     &none     &none    &none  &none  &none  &none  &none  &none
                     &mkp MB1  &mkp MB2  &none    &none  &none
                               &none     &none    &none
            >;
        };
    };
};
